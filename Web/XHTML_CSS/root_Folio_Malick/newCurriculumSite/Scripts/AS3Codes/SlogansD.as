package Scripts.AS3Codes{	import flash.display.MovieClip;	import flash.display.Sprite;	import flash.utils.Timer;	import flash.events.TimerEvent;	import flash.media.SoundTransform;	import flash.filters.DropShadowFilter;	public class SlogansD extends MovieClip {		// Create a main container to hold all the animated characters.		private var _letterBox:Sprite;		// This transparent MC is used to separate the words; it resides in the main movie "MaskMaker".		private var _whiteSpace:WhiteSpace;		// Create the characters which are MCs also residing in MaskMaker's library.		private var _A:LetterA;		private var _l:letter_l;		private var _w:letter_w;		private var _a1:letter_a;		private var _y1:letter_y;		private var _s:letter_s;		private var _r:letter_r;		private var _e:letter_e;		private var _a2:letter_a;		private var _d:letter_d;		private var _y2:letter_y;				private var _t:letter_t;		private var _o:letter_o;				private var _t1:letter_t;		private var _a3:letter_a;		private var _k:letter_k;		private var _e1:letter_e;				private var _y3:letter_y;		private var _o1:letter_o;		private var _u:letter_u;				private var _t2:letter_t;		private var _o2:letter_o;				private var _i:letter_i;		private var _n:letter_n;		private var _v:letter_v;		private var _i1:letter_i;		private var _t3:letter_t;		private var _i2:letter_i;		private var _n1:letter_n;		private var _g:letter_g;				private var _p:letter_p;		private var _l1:letter_l;		private var _a4:letter_a;		private var _c:letter_c;		private var _e2:letter_e;		private var _s1:letter_s;						// Set the position of the characters 		private var _charX:Number = 150;		private var _charY:Number = 120;		private var _charX1:Number = 170;		private var _charY1:Number = 142;						// Create sound object from the main movie;		private var _typingSound:Typewriter;		// Create settings for volume		private var soundSettings = SoundTransform;		// Create an Array		private var _alphabetArray:Array = new Array();		private var _index:Number = 0;		// IN ORDER TO BE ACCESSED BY OTHER CLASSES, THESE TIMERS NEED TO HAVE PUBLIC ATTRIBUTES, OTHERWISE THEY KEEP ON GENERATING THE TYPING SOUND		public var _scribeTimer:Timer = new Timer(40);		public var _timeBreaker:Timer = new Timer(1000, 1);		public function SlogansD() {			// Instantiate the container and place it to the far right of the screen;			_letterBox = new Sprite;			addChild(_letterBox);			_letterBox.x = 0;						// Instantiate the white space object			_whiteSpace = new WhiteSpace();						// Instantiate the sound object			_typingSound = new Typewriter();			// Lower the sound volume			soundSettings = new SoundTransform();			soundSettings.volume = .05;			// Instantiate the characters forming the words; you have to append a number to those characters that are called twice or more;			_A = new LetterA;			_l = new letter_l;			_w = new letter_w;			_a1 = new letter_a;			_y1 = new letter_y;			_s = new letter_s;				_r = new letter_r;			_e = new letter_e;			_a2 = new letter_a;			_d = new letter_d;			_y2 = new letter_y;						_t = new letter_t;			_o = new letter_o;						_t1 = new letter_t;			_a3 = new letter_a;			_k = new letter_k;			_e1 = new letter_e;						_y3 = new letter_y;			_o1 = new letter_o;			_u = new letter_u;						_t2 = new letter_t;			_o2 = new letter_o;						_i = new letter_i;			_n = new letter_n;			_v = new letter_v;			_i1 = new letter_i;			_t3 = new letter_t;			_i2 = new letter_i;			_n1 = new letter_n;			_g = new letter_g;						_p = new letter_p;			_l1 = new letter_l;			_a4 = new letter_a;			_c = new letter_c;			_e2 = new letter_e;			_s1 = new letter_s;			// Populate the Array			_alphabetArray[0] = _A;			_alphabetArray[1] = _l;			_alphabetArray[2] = _w;			_alphabetArray[3] = _a1;			_alphabetArray[4] = _y1;			_alphabetArray[5] = _s;			_alphabetArray[6] = _whiteSpace;			_alphabetArray[7] = _r;			_alphabetArray[8] = _e;			_alphabetArray[9] = _a2;			_alphabetArray[10] = _d;			_alphabetArray[11] = _y2;			_alphabetArray[12] = _whiteSpace;			_alphabetArray[13] = _t;			_alphabetArray[14] = _o;			_alphabetArray[15] = _whiteSpace;			_alphabetArray[16] = _t1;			_alphabetArray[17] = _a3;			_alphabetArray[18] = _k;			_alphabetArray[19] = _e1;			_alphabetArray[20] = _whiteSpace;			_alphabetArray[21] = _y3;			_alphabetArray[22] = _o1;			_alphabetArray[23] = _u;			_alphabetArray[24] = _whiteSpace;			_alphabetArray[25] = _t2;			_alphabetArray[26] = _o2;			_alphabetArray[27] = _whiteSpace;			_alphabetArray[28] = _i;			_alphabetArray[29] = _n;			_alphabetArray[30] = _v;			_alphabetArray[31] = _i1;			_alphabetArray[32] = _t3;			_alphabetArray[33] = _i2;			_alphabetArray[34] = _n1;			_alphabetArray[35] = _g;			_alphabetArray[36] = _whiteSpace;			_alphabetArray[37] = _p;			_alphabetArray[38] = _l1;			_alphabetArray[39] = _a4;			_alphabetArray[40] = _c;			_alphabetArray[41] = _e2;			_alphabetArray[42] = _s1;									// Start the Timer			_scribeTimer.addEventListener(TimerEvent.TIMER, startTyping);			_scribeTimer.start();		}				private function startTyping(myEvent:TimerEvent):void {			// Put the Array in a variable for easier handling			var _character:Sprite = _alphabetArray[_index];			_letterBox.addChild(_character);			// Reduce the size of the characters to make them fit the space;			_character.scaleX = .5;			_character.scaleY = .5;			_character.x = _charX;			_character.y = _charY;			// Play typing sound			_typingSound.play(1, 0, soundSettings);			// Increase the Array index.			_index++;			// Move the newly added character to the right.			_charX += 15;			if (_charX >= 497) {				// You have to be exact on the numbers you specify in the "if statement", otherwise the compiler will thhrow errors;				// Kill the timer and start a new one.				_scribeTimer.removeEventListener(TimerEvent.TIMER, startTyping);				// Run the _timeBreaker Timer to create in between silence.				_timeBreaker.addEventListener(TimerEvent.TIMER, silence);				_timeBreaker.start();			}		}				private function silence(myEvent:TimerEvent):void {			_timeBreaker.removeEventListener(TimerEvent.TIMER, silence);			// After one second remove the silent timer and restart typing.			_scribeTimer.addEventListener(TimerEvent.TIMER, resumeTyping);			//_scribeTimer.start();		}				private function resumeTyping(myEvent:TimerEvent):void {			var _character:Sprite = _alphabetArray[_index];			_letterBox.addChild(_character);			// Reduce the size of the characters to make them fit the space;			_character.scaleX = .5;			_character.scaleY = .5;			_character.x = _charX1;			_character.y = _charY1;			_typingSound.play(1, 0, soundSettings);			_index++;			_charX1 += 15;			if (_charX1 >= 449) {				_scribeTimer.removeEventListener(TimerEvent.TIMER, resumeTyping);			}		}			}	}