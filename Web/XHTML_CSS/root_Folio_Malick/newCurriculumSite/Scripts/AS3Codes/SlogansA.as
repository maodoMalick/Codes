package Scripts.AS3Codes {		import flash.display.MovieClip;	import flash.display.Sprite;	import flash.display.Shape;	import flash.utils.Timer;	import flash.events.TimerEvent;	import flash.media.SoundTransform;			public class SlogansA extends MovieClip {				// Create a main container to hold all the animated characters.		private var _letterBox:Sprite;		// This transparent MC is used to separate the words; it resides in the main movie "MaskMaker".		private var _whiteSpace:WhiteSpace;		// Create Sound object from the main movie;		private var _typingSound:Typewriter;		// Create settings for volume		private var soundSettings = SoundTransform;				// Create the Array		private var _alphabetArray:Array = new Array();		private var _index:Number = 0;				// Instantiate the characters which are MCs made from Type turned into bitmap,		// imported from Ilustrator also residing in main FLA's library.		private var _T:LetterT;		private var _i:letter_i;		private var _m:letter_m;		private var _e:letter_e;				private var _t:letter_t;		private var _o:letter_o;				private var _g:letter_g;		private var _e1:letter_e;		private var _t1:letter_t;				private var _o1:letter_o;		private var _u:letter_u;		private var _t2:letter_t;				private var _o2:letter_o;		private var _f:letter_f;				private var _t3:letter_t;		private var _h:letter_h;		private var _e2:letter_e;				private var _g1:letter_g;		private var _l:letter_l;		private var _o3:letter_o;		private var _o4:letter_o;		private var _m1:letter_m;		private var _y1:letter_y;				private var _c:letter_c;		private var _i1:letter_i;		private var _t4:letter_t;		private var _y2:letter_y;				private var _ques:symbol_Ques;								// Set the position of the characters		private var _charX:Number = 260;		private var _charY:Number = 150;				private var _charX1:Number = 260;		private var _charY1:Number = 193;				// IN ORDER TO BE ACCESSED BY OTHER CLASSES, THESE TIMERS NEED TO HAVE PUBLIC ATTRIBUTES, 		// OTHERWISE THEY KEEP ON GENERATING THE TYPING SOUND		public var _scribeTimer:Timer = new Timer(40);		public var _timeBreaker:Timer = new Timer(1000, 1);						public function SlogansA() {			// Instantiate the main container and add it to the stage.			_letterBox = new Sprite();			addChild(_letterBox);						// Instantiate the white space instance			_whiteSpace = new WhiteSpace();						// Instantiate the sound object			_typingSound = new Typewriter();			// Lower the sound volume			soundSettings = new SoundTransform();			soundSettings.volume = .2;												// Instantiate the characters forming the words; you have to append a number to those characters that are called twice or more;			_T = new LetterT;			_i = new letter_i;			_m = new letter_m;			_e = new letter_e;						_t = new letter_t;			_o = new letter_o;						_g = new letter_g;			_e1 = new letter_e;			_t1 = new letter_t;						_o1 = new letter_o;			_u = new letter_u;			_t2 = new letter_t;						_o2 = new letter_o;			_f = new letter_f;						_t3 = new letter_t;			_h = new letter_h;			_e2 = new letter_e;						_g1 = new letter_g;			_l = new letter_l;			_o3 = new letter_o;			_o4 = new letter_o;			_m1 = new letter_m;			_y1 = new letter_y;						_c = new letter_c;			_i1 = new letter_i;			_t4 = new letter_t;			_y2 = new letter_y;						_ques = new symbol_Ques;									// Populate the Array.			_alphabetArray[0] = _T;			_alphabetArray[1] = _i;			_alphabetArray[2] = _m;			_alphabetArray[3] = _e;			_alphabetArray[4] = _whiteSpace;			_alphabetArray[5] = _t;			_alphabetArray[6] = _o;			_alphabetArray[7] = _whiteSpace;			_alphabetArray[8] = _g;			_alphabetArray[9] = _e1;			_alphabetArray[10] = _t1;			_alphabetArray[11] = _whiteSpace;			_alphabetArray[12] = _o1;			_alphabetArray[13] = _u;			_alphabetArray[14] = _t2;			_alphabetArray[15] = _o2;			_alphabetArray[16] = _f;			_alphabetArray[17] = _whiteSpace;			_alphabetArray[18] = _t3;			_alphabetArray[19] = _h;			_alphabetArray[20] = _e2;			_alphabetArray[21] = _whiteSpace;			_alphabetArray[22] = _g1;			_alphabetArray[23] = _l;			_alphabetArray[24] = _o3;			_alphabetArray[25] = _o4;			_alphabetArray[26] = _m1;			_alphabetArray[27] = _y1;			_alphabetArray[28] = _whiteSpace;			_alphabetArray[29] = _c;			_alphabetArray[30] = _i1;			_alphabetArray[31] = _t4;			_alphabetArray[32] = _y2;			_alphabetArray[33] = _whiteSpace;			_alphabetArray[34] = _ques;						// Start the Timer			_scribeTimer.start();			_scribeTimer.addEventListener(TimerEvent.TIMER, typingTime);					}						public function typingTime(myEvent:TimerEvent):void {			//myEvent.target.stopImmediatePropagation();			var _character:MovieClip = _alphabetArray[_index];			_letterBox.addChild(_character);			_character.x = _charX;			_character.y = _charY;						// Play typing sound			_typingSound.play(1, 0, soundSettings);						//trace(_character);						// Increase the Array index.			_index++;			// Move the newly added character to the right.			_charX += 21;			if(_charX >= 574) {				// You have to be exact on the numbers you specify in the "if statement", otherwise the compiler will thhrow errors;				// Kill the timer and start a new one.				_scribeTimer.removeEventListener(TimerEvent.TIMER, typingTime);				// Run the _timeBreaker Timer to create in between silence.				_timeBreaker.addEventListener(TimerEvent.TIMER, silence);				_timeBreaker.start();			}		}				private function silence(myEvent:TimerEvent):void {			// After one second remove the silent timer and restart typing.			_timeBreaker.addEventListener(TimerEvent.TIMER_COMPLETE, resumeTyping);		}				private function resumeTyping(myEvent:TimerEvent):void {			_timeBreaker.removeEventListener(TimerEvent.TIMER_COMPLETE, resumeTyping);			_scribeTimer.addEventListener(TimerEvent.TIMER, typingTime1);			_scribeTimer.start();		}				private function typingTime1(newEvent:TimerEvent):void {			var _character:MovieClip = _alphabetArray[_index];			_letterBox.addChild(_character);			_character.x = _charX1;			_character.y = _charY1;			_typingSound.play(1, 0, soundSettings);						//trace(_character);						_index++;			_charX1 += 21;			if(_charX1 >= 680) {				// You have to be exact on the numbers you specify in the "if statement", otherwise the compiler will thhrow errors;				_scribeTimer.removeEventListener(TimerEvent.TIMER, typingTime1);			}								}	}}