package Scripts.AS3Codes{		// ******** HOW IT WORKS ****************	// A complete console is created with all its components, 	// the billboard will imported thru the class "_xmlPictureLoader101";	import flash.display.Sprite;	import flash.display.Shape;	import flash.geom.Matrix;	import flash.geom.Rectangle;	import flash.display.GradientType;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.filters.DropShadowFilter;	import flash.net.URLRequest;	import flash.display.Loader;	import flash.media.Sound;	import flash.media.SoundChannel;	import flash.media.SoundTransform;	import flash.net.NetConnection;	import flash.net.NetStream;	import flash.media.Video;	import flash.events.AsyncErrorEvent;	import flash.events.NetStatusEvent;	import flash.utils.Timer;	import flash.events.TimerEvent;	import flash.text.TextField;	import flash.text.TextFieldAutoSize;	import flash.text.TextFormat;	public class NewMediaCenter09 extends Sprite {		// -------------------------------< Main Container >---------------------------------		// Create main Container that hold everything		private var myContainer:Sprite;		// Create the background graphic.		private var myConsole:Sprite;		// Create a Mask for the Video.		private var myMask:Shape;		// Create Close Btn.		private var closeBtn:Sprite;		private var crossSign:Sprite;		// Create Sound Objects		private var soundReq:URLRequest;		private var mySound:Sound;		private var myChannel:SoundChannel;		private var soundSettings:SoundTransform;		private var myPausing:int;		// Create Video objects.		private var videoConnector:NetConnection;		private var videoStreamer:NetStream;		private var myCinema:Video;		// This Boolean will not allow the sound to play if the the window is closed before the sound starts.		private var killSound:Boolean = false;		// Create Shadows		private var myShadow:DropShadowFilter;		private var myShadow1:DropShadowFilter;		// Create an instance of the imported class for the billboard display		private var _xmlPictureLoader101:XmlPictureLoader101;		public function NewMediaCenter09() {			myContainer = new Sprite;			addChild(myContainer);			// Initially hide the Close Btn below the console and show it on Rollover;			closeBtn = new Sprite;			closeBtn.graphics.lineStyle(1, 0xFFFFFF);			closeBtn.graphics.beginFill(0xCCCCCC);			closeBtn.graphics.drawRoundRectComplex(590, 100, 10, 20, 0, 0, 0, 10);			closeBtn.graphics.endFill();			// Because the console is transparent at the top, make sure closeBtn will be invisible;			closeBtn.alpha = 0;			myContainer.addChild(closeBtn);			// Sorry but the cross sign on the close Btn makes it look like a window application;			/*crossSign = new Sprite();			crossSign.graphics.lineStyle(1, 0x666666);			crossSign.graphics.moveTo(603, 105);			crossSign.graphics.lineTo(607, 110);			crossSign.graphics.moveTo(607, 105);			crossSign.graphics.lineTo(603, 110);			closeBtn.addChild(crossSign);*/			// When the mouse leaves the console and rolls over the closeBtn, the closeBtn will not disappear;			closeBtn.addEventListener(MouseEvent.MOUSE_OVER, keepInPlace);			closeBtn.addEventListener(MouseEvent.MOUSE_OUT, hideCloseBtn);			closeBtn.addEventListener(MouseEvent.MOUSE_DOWN, closeWindow);			function keepInPlace(myEvent:MouseEvent):void {				closeBtn.x = 10;				closeBtn.alpha = 1;			}						myConsole = new Sprite;			var myColors:Array = new Array(0x666666, 0xCCCCCC);			var myAlpha:Array = new Array(1, .5);			var myRatio:Array = new Array(0, 255);			var myMatrix:Matrix = new Matrix();			myMatrix.createGradientBox(500, 100, 80, 200, 100);			myConsole.graphics.lineStyle(1, 0xFFFFFF);			myConsole.graphics.beginGradientFill(GradientType.LINEAR, myColors, myAlpha, myRatio, myMatrix);			// Added to this Complex Rect are: Radius Left, Right, Bottom Left, Bottom Right.			myConsole.graphics.drawRoundRectComplex(100, 100, 500, 150, 30, 0, 0, 30);			myConsole.graphics.endFill();			myContainer.addChild(myConsole);			// Drag the main Container "myContainer" by way of grabbing its child "myConsole", thus dragging along everything inside the container.			myConsole.buttonMode = true;			myConsole.addEventListener(MouseEvent.MOUSE_DOWN, dragStart);			myConsole.addEventListener(MouseEvent.MOUSE_OVER, showCloseBtn);			myConsole.addEventListener(MouseEvent.MOUSE_OUT, hideCloseBtn);			myConsole.addEventListener(MouseEvent.MOUSE_UP, dragStop);			// Create a light Shadow Effect.			myShadow = new DropShadowFilter(25, 25, 0x000000, .3, 20, 20);			myConsole.filters = new Array(myShadow);			// Create a dark Shadow Effect.			myShadow1 = new DropShadowFilter(25, 25, 0x000000, .5, 20, 20);			// -------------------------------< /Main Container >---------------------------------			// -------------------------------< Instantiate Sound Objects >---------------------------------			mySound = new Sound();			myChannel = new SoundChannel();			soundSettings = new SoundTransform();			// -------------------------------< /Instantiate Sound Objects >---------------------------------			// --------------------------------< Instantiate Video Objects >------------------------------------------			videoConnector = new NetConnection();			videoConnector.connect(null);			videoStreamer = new NetStream(videoConnector);			myMask = new Shape();			myMask.graphics.beginFill(0x000000);			myMask.graphics.drawRoundRectComplex(110, 107, 250, 135, 30, 0, 0, 30);			myMask.graphics.endFill();			myContainer.addChild(myMask);			myCinema = new Video();			myContainer.addChild(myCinema);			myCinema.x = 110;			myCinema.y = 100;			myCinema.mask = myMask;			myCinema.attachNetStream(videoStreamer);			videoStreamer.play("videos/grid_lines_in_space1.flv");			videoStreamer.addEventListener(AsyncErrorEvent.ASYNC_ERROR, noSyncError);			videoStreamer.addEventListener(NetStatusEvent.NET_STATUS, jukeBox);						// Swap the Depth of this application on the stage of the main movie (Check out the syntax).			this.addEventListener(MouseEvent.CLICK, swapLevel);			// --------------------------------< /Instantiate Video Objects >------------------------------------------		}				private function swapLevel(myEvent:MouseEvent):void {			this.parent.addChild(this);		}				private function closeWindow(myEvent:MouseEvent):void {			// ******* THIS IS HOW THE WHOLE THING BREAKS DOWN. *************			// This Btn will remove the Loader which is loading the movie - to which this class has been assigned - from the stage of the main movie (parent of the Loader) while			// making sure that the sound of the loaded movie won't play;			// "myEvent.target" means "closeBtn".myContainer.NewMediaCenter05(the Class itself, that is this doc).Stage(of MainMovie.swf which is the parent of the object to be 			// removed, that is the Class).removeChild();			// Now that you have addressed the parent, target the child:			// closeBtn.myContainer.NewMediaCenter05; ( SEE PREVIOUS VERSION "NewMediaCenter06" WHICH IS MORE COMPLICATED)			myEvent.target.parent.parent.parent.removeChild(myEvent.target.parent.parent);			// Don't allow the sound to play if the window is closed before the sound starts;			killSound = true;			// Stop the sound when the window is closed after the sound has already started;			myChannel.stop();		}				private function dragStart(myEvent:Event):void {			// Parent refers to "myContainer".			myEvent.target.parent.startDrag();			// Apply the dark Shadow Effect.			myConsole.filters = new Array(myShadow1);		}				private function showCloseBtn(myEvent:MouseEvent):void {			// Pull the close btn from beneath the console and give it make it visible			closeBtn.x = 10;			closeBtn.alpha = 1;		}				private function hideCloseBtn(myEvent:MouseEvent):void {			// Send the close Btn back under the console and make it transparent			closeBtn.x = 0;			closeBtn.alpha = 0;		}				private function dragStop(myEvent:Event):void {			myEvent.target.parent.stopDrag();			// Restore the light shadow Effect.			myConsole.filters = new Array(myShadow);		}				private function noSyncError(myEvent:Event):void {			videoStreamer.removeEventListener(AsyncErrorEvent.ASYNC_ERROR, noSyncError);			// No comment		}				private function jukeBox(soundEvent:NetStatusEvent):void {			if (soundEvent.info.code == "NetStream.Play.Stop") {				videoStreamer.removeEventListener(NetStatusEvent.NET_STATUS, jukeBox);				// -------------------------------< /Video >---------------------------------				//--------------------------------< MUSIC SECTION >--------------------------------				// Play Initial Sound.				soundReq = new URLRequest("sounds/The Boss.mp3");				mySound.load(soundReq);				if (killSound == true) {					// nothing plays					myChannel.stop();				} else {					myChannel = mySound.play();				}				// -----------------------------< SOUND CONTROLS >----------------------------------				// CREATE PLAY BTN				// We did a tricky thing by sandwiching the Textfield between two similar graphics, "bgdBtn" (darker on the				// background) and "playBtn" (almost transparent on top), in order to correctly click and drag without seeing the 				// TextField's insertion point.				// Bgd of Btn				var bgdBtn:Sprite = new Sprite();				bgdBtn.x = 370;				bgdBtn.y = 210;				bgdBtn.graphics.lineStyle(2, 0x999999);				bgdBtn.graphics.beginFill(0x666666);				bgdBtn.graphics.drawRoundRectComplex(0, 0, 50, 15, 5, 0, 0, 5);				bgdBtn.graphics.endFill();				myContainer.addChild(bgdBtn);				// TextField				var playBtnLabel_txt:TextField = new TextField();				playBtnLabel_txt.x = 8;				playBtnLabel_txt.y = 1;				playBtnLabel_txt.autoSize = TextFieldAutoSize.LEFT;				playBtnLabel_txt.textColor = 0xFFFFFF;				playBtnLabel_txt.embedFonts = true;								var playFormat:TextFormat = new TextFormat();				playFormat.bold = true;				playFormat.font = "Stencil Std";				playBtnLabel_txt.text = "PLAY";				playBtnLabel_txt.setTextFormat(playFormat);				bgdBtn.addChild(playBtnLabel_txt);				// Top of Btn				var playBtn:Sprite = new Sprite();				playBtn.x = 0;				playBtn.y = 0;				playBtn.graphics.lineStyle(2, 0x999999, 0);				playBtn.graphics.beginFill(0x666666, .2);				playBtn.graphics.drawRoundRectComplex(0, 0, 50, 15, 5, 0, 0, 5);				playBtn.graphics.endFill();				bgdBtn.addChild(playBtn);				// This single Rectangle object is used as a reference to the area where all the Btns will be restricted.				var dragLimits:Rectangle = new Rectangle(370, 210, 170, -100);				// Drag it				// "MouseEvent.DOUBLE_CLICK" will work only after "doubleClickEnabled" is set to "true" on a MOUSE_DOWN & MOUSE_UP.				playBtn.doubleClickEnabled = true;				playBtn.addEventListener(MouseEvent.MOUSE_DOWN, dragPlayBtn);				playBtn.addEventListener(MouseEvent.MOUSE_UP, endDrag);				playBtn.addEventListener(MouseEvent.DOUBLE_CLICK, playTune);				function dragPlayBtn(myEvent:MouseEvent):void {					// Swap depth first; notice that all 3 objects making up the Btn have to be called sequentially.					myContainer.addChild(bgdBtn);					bgdBtn.addChild(playBtnLabel_txt);					bgdBtn.addChild(playBtn);					// Now drag.					myEvent.target.parent.startDrag(false, dragLimits);				}								function endDrag(myEvent:MouseEvent):void {					myEvent.target.parent.stopDrag();				}								function playTune(myEvent:MouseEvent):void {					myChannel.stop();					var soundReq1:URLRequest = new URLRequest("sounds/The Boss.mp3");					var mySound1:Sound = new Sound();					mySound1.load(soundReq1);					myChannel = mySound1.play(myPausing);				}								// CREATE PAUSE BTN				// Bgd of Btn				var bgd1Btn:Sprite = new Sprite();				bgd1Btn.x = 427;				bgd1Btn.y = 210;				bgd1Btn.graphics.lineStyle(2, 0x999999);				bgd1Btn.graphics.beginFill(0x666666);				bgd1Btn.graphics.drawRoundRectComplex(0, 0, 50, 15, 5, 0, 0, 5);				bgd1Btn.graphics.endFill();				myContainer.addChild(bgd1Btn);				// TextField				var pauseBtnLabel_txt:TextField = new TextField();				pauseBtnLabel_txt.x = 5;				pauseBtnLabel_txt.y = 1;				pauseBtnLabel_txt.autoSize = TextFieldAutoSize.LEFT;				pauseBtnLabel_txt.textColor = 0xFFFFFF;				pauseBtnLabel_txt.embedFonts = true;								var pauseFormat:TextFormat = new TextFormat();				pauseFormat.bold = true;				pauseFormat.font = "Stencil Std";				pauseBtnLabel_txt.text = "PAUSE";				pauseBtnLabel_txt.setTextFormat(pauseFormat);				bgd1Btn.addChild(pauseBtnLabel_txt);				// Top of Btn				var pauseBtn:Sprite = new Sprite();				pauseBtn.x = 0;				pauseBtn.y = 0;				pauseBtn.graphics.lineStyle(2, 0x999999, 0);				pauseBtn.graphics.beginFill(0x666666, .2);				pauseBtn.graphics.drawRoundRectComplex(0, 0, 50, 15, 5, 0, 0, 5);				pauseBtn.graphics.endFill();				bgd1Btn.addChild(pauseBtn);				// Drag it				// "MouseEvent.DOUBLE_CLICK" will work only after "doubleClickEnabled" is set to "true" on a drag & drop.				pauseBtn.doubleClickEnabled = true;				pauseBtn.addEventListener(MouseEvent.MOUSE_DOWN, dragpauseBtn);				pauseBtn.addEventListener(MouseEvent.MOUSE_UP, endDrag);				pauseBtn.addEventListener(MouseEvent.DOUBLE_CLICK, pauseTune);				function dragpauseBtn(myEvent:MouseEvent):void {					// Swap depth first; notice that all 3 objects making up the Btn have to be called sequentially.					myContainer.addChild(bgd1Btn);					bgd1Btn.addChild(pauseBtnLabel_txt);					bgd1Btn.addChild(pauseBtn);					// Now drag.					myEvent.target.parent.startDrag(false, dragLimits);				}				function pauseTune(myEvent:MouseEvent):void {					myPausing = myChannel.position;					myChannel.stop();				}								// CREATE STOP BTN				// Bgd of Btn				var bgd2Btn:Sprite = new Sprite();				bgd2Btn.x = 484;				bgd2Btn.y = 210;				bgd2Btn.graphics.lineStyle(2, 0x999999);				bgd2Btn.graphics.beginFill(0x666666);				bgd2Btn.graphics.drawRoundRectComplex(0, 0, 50, 15, 5, 0, 0, 5);				bgd2Btn.graphics.endFill();				myContainer.addChild(bgd2Btn);				// TextField				var stopBtnLabel_txt:TextField = new TextField();				stopBtnLabel_txt.x = 5;				stopBtnLabel_txt.y = 1;				stopBtnLabel_txt.autoSize = TextFieldAutoSize.LEFT;				stopBtnLabel_txt.textColor = 0xFFFFFF;				stopBtnLabel_txt.embedFonts = true;								var stopFormat:TextFormat = new TextFormat();				stopFormat.bold = true;				stopFormat.font = "Stencil Std";				stopBtnLabel_txt.text = "STOP";				stopBtnLabel_txt.setTextFormat(stopFormat);				bgd2Btn.addChild(stopBtnLabel_txt);				// Top of Btn				var stopBtn:Sprite = new Sprite();				stopBtn.x = 0;				stopBtn.y = 0;				stopBtn.graphics.lineStyle(2, 0x999999, 0);				stopBtn.graphics.beginFill(0x666666, .2);				stopBtn.graphics.drawRoundRectComplex(0, 0, 50, 15, 5, 0, 0, 5);				stopBtn.graphics.endFill();				bgd2Btn.addChild(stopBtn);				// Drag it				// "MouseEvent.DOUBLE_CLICK" will work only after "doubleClickEnabled" is set to "true" on a drag & drop.				stopBtn.doubleClickEnabled = true;				stopBtn.addEventListener(MouseEvent.MOUSE_DOWN, dragstopBtn);				stopBtn.addEventListener(MouseEvent.MOUSE_UP, endDrag);				stopBtn.addEventListener(MouseEvent.DOUBLE_CLICK, stopTune);				function dragstopBtn(myEvent:MouseEvent):void {					// Swap depth first; notice that all 3 objects making up the Btn have to be called sequentially.					myContainer.addChild(bgd2Btn);					bgd2Btn.addChild(stopBtnLabel_txt);					bgd2Btn.addChild(stopBtn);					// Now Drag.					myEvent.target.parent.startDrag(false, dragLimits);				}				function stopTune(myEvent:MouseEvent):void {					myChannel.stop();				}								// CREATE VIDEO BTN				// Bgd of Btn				var bgd3Btn:Sprite = new Sprite();				bgd3Btn.x = 541;				bgd3Btn.y = 210;				bgd3Btn.graphics.lineStyle(2, 0x999999);				bgd3Btn.graphics.beginFill(0x666666);				bgd3Btn.graphics.drawRoundRectComplex(0, 0, 50, 15, 5, 0, 0, 5);				bgd3Btn.graphics.endFill();				myContainer.addChild(bgd3Btn);				// TextField				var videoBtnLabel_txt:TextField = new TextField();				videoBtnLabel_txt.x = 5;				videoBtnLabel_txt.y = 1;				videoBtnLabel_txt.autoSize = TextFieldAutoSize.LEFT;				videoBtnLabel_txt.textColor = 0xFFFFFF;				videoBtnLabel_txt.embedFonts = true;								var videoFormat:TextFormat = new TextFormat();				videoFormat.bold = true;				videoFormat.font = "Stencil Std";				videoBtnLabel_txt.text = "VIDEO";				videoBtnLabel_txt.setTextFormat(videoFormat);				bgd3Btn.addChild(videoBtnLabel_txt);				// Top of Btn				var videoBtn:Sprite = new Sprite();				videoBtn.x = 0;				videoBtn.y = 0;				videoBtn.graphics.lineStyle(2, 0x999999, 0);				videoBtn.graphics.beginFill(0x666666, .2);				videoBtn.graphics.drawRoundRectComplex(0, 0, 50, 15, 5, 0, 0, 5);				videoBtn.graphics.endFill();				bgd3Btn.addChild(videoBtn);				// Drag it				// "MouseEvent.DOUBLE_CLICK" will work only after "doubleClickEnabled" is set to "true" on a drag & drop.				videoBtn.doubleClickEnabled = true;				videoBtn.addEventListener(MouseEvent.MOUSE_DOWN, dragvideoBtn);				videoBtn.addEventListener(MouseEvent.MOUSE_UP, endDrag);				videoBtn.addEventListener(MouseEvent.DOUBLE_CLICK, playVideo);				function dragvideoBtn(myEvent:MouseEvent):void {					// // Swap depth first; notice that all 3 objects making up the Btn have to be called sequentially.					myContainer.addChild(bgd3Btn);					bgd3Btn.addChild(videoBtnLabel_txt);					bgd3Btn.addChild(videoBtn);					// Now Drag.					myEvent.target.parent.startDrag(false, dragLimits);				}				function playVideo(myEvent:MouseEvent):void {					videoStreamer.play("videos/grid_lines_in_space1.flv");				}								// CREATE SOUND GROOVE				var soundGroove:Sprite = new Sprite();				soundGroove.x = 265;				soundGroove.y = 235;				soundGroove.graphics.beginFill(0x333333);				soundGroove.graphics.drawRect(115, 0, 200, 5);				soundGroove.graphics.endFill();				myContainer.addChild(soundGroove);				// CREATE DRAGGABLE SOUND SLIDER				var volumeSlider:Sprite = new Sprite();				volumeSlider.graphics.lineStyle(2, 0x999999);				volumeSlider.graphics.beginFill(0x666666);				volumeSlider.graphics.drawRoundRectComplex(soundGroove.x + 190, soundGroove.y - 3, 25, 10, 5, 0, 0, 5);				volumeSlider.graphics.endFill();				myContainer.addChild(volumeSlider);				// Drag Slider				var sliderLimits:Rectangle = new Rectangle(-100, 0, 200, 0);				volumeSlider.buttonMode = true;				volumeSlider.addEventListener(MouseEvent.MOUSE_DOWN, dragSlider);				volumeSlider.addEventListener(MouseEvent.MOUSE_OUT, endDrag);				volumeSlider.addEventListener(MouseEvent.MOUSE_UP, endDrag);				function dragSlider(myEvent:MouseEvent):void {					myEvent.target.startDrag(false, sliderLimits);				}				// -----------------------------< /SOUND CONTROLS >----------------------------------				// -----------------------------< IMPORTED BILLBOARD DISPLAY CLASS >----------------------------------------				// Instantiate BillBoard				_xmlPictureLoader101 = new XmlPictureLoader101;				myContainer.addChild(_xmlPictureLoader101);				_xmlPictureLoader101.x = 452;				_xmlPictureLoader101.y = 120;				// Make it draggable.				_xmlPictureLoader101.addEventListener(MouseEvent.MOUSE_DOWN, dragBillBoard);				_xmlPictureLoader101.addEventListener(MouseEvent.MOUSE_OUT, endDrag);				_xmlPictureLoader101.addEventListener(MouseEvent.MOUSE_UP, endDrag);				function dragBillBoard(boardEvent:MouseEvent):void {					boardEvent.target.parent.startDrag(false, new Rectangle(0, 0, -85, 26));				}				// -----------------------------< /IMPORTED BILLBOARD DISPLAY CLASS >----------------------------------------				// Create TextField to display the sound Duration.				var ellapsedTime_txt:TextField = new TextField();				ellapsedTime_txt.x = 450;				ellapsedTime_txt.y = 105;				ellapsedTime_txt.autoSize = TextFieldAutoSize.LEFT;				ellapsedTime_txt.textColor = 0x333333;				//ellapsedTime_txt.embedFonts = true;				myContainer.addChild(ellapsedTime_txt);								/*var ellapsedFormat:TextFormat = new TextFormat();				ellapsedFormat.bold = true;				ellapsedFormat.font = "Stencil Std";*/								// Instantiate the shape to use for the levels.				var myShape:Shape = new Shape();				// Draw the levels continously to create the visual effects of a soundwave.				stage.addEventListener(Event.ENTER_FRAME, visualEffects);			}						// -----------------------------< visualEffects >-----------------------------------						function visualEffects(myEvent:Event):void {				// Control how the digits are displayed.				var timeAdjuster:String;				var timeCount:Number = Math.round(myChannel.position / 1000);				var duration:Number = Math.round(mySound.length / 1000);								if (timeCount <= 9) {					timeAdjuster = "00";				} else if (timeCount <= 99) {					timeAdjuster = "0";				} else {					timeAdjuster = "";				}				// Display TextField info.				ellapsedTime_txt.text = "Duration: " + timeAdjuster + timeCount + " of " + duration + " seconds";				//trace(duration - timeCount);				//ellapsedTime_txt.setTextFormat(ellapsedFormat);								// It took me a lot of sweat to get this one. For a while, I couldn't figure it out; but I traced 				// "volumeSlider.x" outside of this "enterFrame" event and got 0, and when I traced "soundGroove.x", I got				// 265 (which is its original x,y position); considering that to get 0 volume, both objects have to be at 				// the same x,y position, it is logical to add 265 on "volumeSlider" to put it at the same position as 				// "soundGroove.x", and from there if you move "volumeSlider" the sound will increase.				var myVolume = ((volumeSlider.x + 365)  - soundGroove.x) / 100;				soundSettings.volume = myVolume;				myChannel.soundTransform = soundSettings;				// -------------------------< Levels >--------------------------------------				// Avoid overlapping redrawing by clearing the previous drawings at each round.				myShape.graphics.clear();				// Create the levels				myShape.graphics.beginFill(0x000000);				myShape.graphics.drawRect(447, 100, 5, -15 * myChannel.leftPeak);				myShape.graphics.endFill();				myConsole.addChild(myShape);				myShape.graphics.beginFill(0x000000);				myShape.graphics.drawRect(454, 100, 5, -20 * myChannel.leftPeak);				myShape.graphics.endFill();				myConsole.addChild(myShape);				myShape.graphics.beginFill(0x000000);				myShape.graphics.drawRect(461, 100, 5, -30 * myChannel.rightPeak);				myShape.graphics.endFill();				myConsole.addChild(myShape);				myShape.graphics.beginFill(0x000000);				myShape.graphics.drawRect(468, 100, 5, -40 * myChannel.leftPeak);				myShape.graphics.endFill();				myConsole.addChild(myShape);				myShape.graphics.beginFill(0x000000);				myShape.graphics.drawRect(475, 100, 5, -70 * myChannel.rightPeak);				myShape.graphics.endFill();				myConsole.addChild(myShape);				myShape.graphics.beginFill(0x000000);				myShape.graphics.drawRect(482, 100, 5, -50 * myChannel.leftPeak);				myShape.graphics.endFill();				myConsole.addChild(myShape);				myShape.graphics.beginFill(0x000000);				myShape.graphics.drawRect(489, 100, 5, -30 * myChannel.leftPeak);				myShape.graphics.endFill();				myConsole.addChild(myShape);				myShape.graphics.beginFill(0x000000);				myShape.graphics.drawRect(496, 100, 5, -70 * myChannel.rightPeak);				myShape.graphics.endFill();				myConsole.addChild(myShape);				myShape.graphics.beginFill(0x000000);				myShape.graphics.drawRect(503, 100, 5, -40 * myChannel.leftPeak);				myShape.graphics.endFill();				myConsole.addChild(myShape);				myShape.graphics.beginFill(0x000000);				myShape.graphics.drawRect(510, 100, 5, -30 * myChannel.rightPeak);				myShape.graphics.endFill();				myConsole.addChild(myShape);				myShape.graphics.beginFill(0x000000);				myShape.graphics.drawRect(517, 100, 5, -20 * myChannel.leftPeak);				myShape.graphics.endFill();				myConsole.addChild(myShape);				myShape.graphics.beginFill(0x000000);				myShape.graphics.drawRect(524, 100, 5, -40 * myChannel.leftPeak);				myShape.graphics.endFill();				myConsole.addChild(myShape);				myShape.graphics.beginFill(0x000000);				myShape.graphics.drawRect(531, 100, 5, -60 * myChannel.rightPeak);				myShape.graphics.endFill();				myConsole.addChild(myShape);				myShape.graphics.beginFill(0x000000);				myShape.graphics.drawRect(538, 100, 5, -70 * myChannel.leftPeak);				myShape.graphics.endFill();				myConsole.addChild(myShape);				myShape.graphics.beginFill(0x000000);				myShape.graphics.drawRect(545, 100, 5, -40 * myChannel.rightPeak);				myShape.graphics.endFill();				myConsole.addChild(myShape);				myShape.graphics.beginFill(0x000000);				myShape.graphics.drawRect(552, 100, 5, -50 * myChannel.leftPeak);				myShape.graphics.endFill();				myConsole.addChild(myShape);				myShape.graphics.beginFill(0x000000);				myShape.graphics.drawRect(559, 100, 5, -40 * myChannel.rightPeak);				myShape.graphics.endFill();				myConsole.addChild(myShape);				myShape.graphics.beginFill(0x000000);				myShape.graphics.drawRect(566, 100, 5, -70 * myChannel.rightPeak);				myShape.graphics.endFill();				myConsole.addChild(myShape);				myShape.graphics.beginFill(0x000000);				myShape.graphics.drawRect(573, 100, 5, -50 * myChannel.leftPeak);				myShape.graphics.endFill();				myConsole.addChild(myShape);				myShape.graphics.beginFill(0x000000);				myShape.graphics.drawRect(580, 100, 5, -30 * myChannel.rightPeak);				myShape.graphics.endFill();				myConsole.addChild(myShape);				// -------------------------< /Levels >--------------------------------------			}			// Make TextField disappear after sound has finished.			myChannel.addEventListener(Event.SOUND_COMPLETE, removeTextField);			function removeTextField(myEvent:Event):void {				myContainer.removeChild(ellapsedTime_txt);				videoStreamer.removeEventListener(NetStatusEvent.NET_STATUS, jukeBox);				stage.removeEventListener(Event.ENTER_FRAME, visualEffects);			}			// --------------------------------< /visualEffects >-----------------------------		}	}}